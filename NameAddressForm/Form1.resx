<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jCjiTKTpXcduHZN6UtCrD1pzYctCHOuz7MNrWjLCEr2T0oQM9bKHTHH2LeiQIhTSXABuiRWsYNBIKE6j
        nS2AyXIpdwUuooq+L0SRaisoOcjYPBHRtym/EpsFDQhdYtbOs8eYEWwupxcKAnUsekdKM/lOXRI9a7Tt
        w7xvXctsMOz7MUsp2NEyjrTHE5k6rPrUC6L3EelSzATDozCfuuzb13/Z+VGu0b6z+3LwWVCJtQl9ysg0
        80H3fSN6yDmRpfPDDqLAMiBfO9XKPqJkQt8DU/uHaN67lthh2fZRh1zDXMIbpWTejd+FPG+A/Zt67Ps/
        JjXbt9ZvbY8FYX5JorhQcgENhUlI1ocuW1fIKvZ3VZaGRHPeo/lSG2D+l6fWHZN6SiTlmRRyPCEEldn2
        YZ6g2VYTS6NK3YeFK2kYM9s3oQxCRythTflN5MvnXqmN3jfXr9Hwj5C+pooJXjd3WjmJeNncwwbUOVMG
        dBNquvBxceM5kLyZyzwsNVwY5DXe/mu1/NDlDNm19KJAMBRniQqm+OUfzXe/mu//ADRgQZ3V3XFEWy/S
        KNvlwv8AvwxQJcqY6hjLh1gzf1427oqIBTOl7roRbs244xAypJPSj5n1Ya/8u//aAAwDAQACAAMAAAAQ
        88888888888888888888888888888888888888888888888888888888888888888888888888888880
        08888888888888888888888880s88884Y088888888888888888888888I88w8c0EM88888888888888
        88888888888I08oE8s88888888888888888888888040ksM448wkM88888888888888888888YQ44MMs
        AcI4Aw0888888888888888888IM0UIQws4A8oc8888888888888888884ksUoMAY4IEw848888888888
        8888888888M8ocI8cMcs8c8888888888888888888888888888888888888888888888888888888888
        888888888888888888888888888888888888888888888888/8QAFBEBAAAAAAAAAAAAAAAAAAAAgP/a
        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
</value>
  </data>
</root>